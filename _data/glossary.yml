terms:
  - term: API
    definition: |
      For _application programming interface_, an intentional framework by which third-party developers can enable their own programs to integrate with a product.
      Pronounced _A-P-I_.
      See also <<glossary-rest-api,REST API>>.

  - term: AsciiDoc
    definition: |
      An extensible lightweight markup language with numerous powerful features such as conditional processing, file includes, and variable text substitutions.
      Pronounced _ASK-ee-doc_.

  - term: CCO
    definition: |
      See *complex content object*.

  - term: CLI
    definition: |
      Command-line interface.
      Any place where a command prompt expects textual input.
      Pronounced _C-L-I_.
# tag::cco-example[]
  - term: complex content object
    definition: |
      Abbreviated CCO, this is an item that may be more metadata than content, stored many to a file, as opposed to more typical text content units like chapters or topics, which may have some metadata but are mainly text and images.
      See <<chapter-managing-complexity>>.

  - term: DITA
    definition: |
      Acronym for _Darwin Information Typing System_.
      An XML standard designed for technical writing, introduced by IBM in 2005.
      In addition to a markup standard, DITA incorporates dynamic functionality and mature framework elements.
      https://en.wikipedia.org/wiki/Darwin_Information_Typing_Architecture[Wikipedia].

  - term: DRY
    definition: |
      For "don't repeat yourself", referring to a single-sourcing approach to code or docs.
# end::cco-example[]
  - term: JSON
    definition: |
      A very common format for semi-structured data, popular for data transfer, especially with JavaScript/Node.js, though quickly becoming the industry standard.
      Pronounced _JAY-sahn_.

  - term: Markdown
    definition: |
      One of the lightest weight and most popular textual markup languages, popularized on GitHub, StackOverflow, various forums and comments systems, and numerous other places.
      Markdown, however, is not a dynamic language.

  - term: GUI
    definition: |
      Acronym for _graphical user interface_.
      Pronounced _GOO-ee_.

  - term: IDE
    definition: |
      For _integrated development environment_, a toolchain/platform that facilitates software programming in a customized context that incorporates the particularities of the source language(s) and the product build.
      Pronounced _I-D-E_.

  - term: REST API
    definition: |
      An API (see <<glossary-api,API>>) that listens for and responds to HTTP requests to established endpoints.
      Pronounced _REST A-P-I_.

  - term: reStructuredText
    definition: |
      A dynamic lightweight markup language associated with Python development.

  - term: RST
    definition: |
      Abbreviation for reStructuredText.

  - term: SaaS
    definition: |
      Acronym for _software as a service_. Subscription-licensed tools hosted in “the cloud”, SaaS products require no user maintenance and provide thin-client remote access (e.g., browsers, mobile apps).
      Relevant examples include Wordpress.com, GitHub, Slack, and Office 365.
      Pronounced _sass_.

  - term: SME
    definition: |
      Subject matter expert.
      Someone close to or highly familiar with the source/product who contributes this expertise to the documentation process.
      Please don't pronounce this _sme_ or for god's sake _shme_.

  - term: topic
    definition: |
      A discrete content item intended to be included (embedded or referenced) in parent document.
      See <<topic-based-authoring>>.

  - term: QA
    definition: |
      Initialism for _quality assurance_.

  - term: UI
    definition: |
      Initialism for _user interface_.
      Pronounced _U-I_.

  - term: XML
    definition: |
      Extensible markup language, a tag-based means of conveying semi-structured data.

  - term: XSL/XSLT
    definition: |
      A highly configurable and extensible means of formatting, stylizing, and conveying XML data.

  - term: YAML
    definition: |
      A format for semi-structured data.
      Usually preferred over JSON and XML when human reading and writing is called for, but lacking a standard means of schematizing templates.
      Pronounced _YAM-el_.
